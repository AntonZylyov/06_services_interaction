openapi: 3.0.0
info:
  title: Синхронное http взаимодействие через rest
  version: 1.0.0
tags:
  - name: User Service
    description: Сервис работы с пользователем
  - name: Order Service
    description: Сервис заказов
  - name: Billing Service
    description: Сервис нотификаций
  - name: Notification Service
    description: Сервис уведомлений
paths:
  /user/register:
    post:
      tags:
        - "User Service"
      summary: Создание пользователя
      operationId: registerUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: Создание прошло успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
  '/user/{userId}':
    get:
      tags:
        - "User Service"
      summary: Данные пользователя по id
      description: Вернуть данные пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
        '404':
          description: Такого пользователя нет
  /billing/createAccount:
    post:
      tags:
        - "Billing Service"
      summary: Создание аккаунта биллинга
      operationId: createBillingAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              required:
                - userId
            example:
              userId: 1
      responses:
        '201':
          description: Аккаунт создан успешно
  /billing/withdraw:
    post:
      tags:
        - "Billing Service"
      summary: Списание денег
      operationId: billingWithdraw
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                sum:
                  type: integer
              required:
                - userId
                - sum
            example:
              userId: 1
              sum: 100500
      responses:
        '201':
          description: Списание прошло успешно
  /order/create:
    post:
      tags:
        - "Order Service"
      summary: Создание заказа
      operationId: orderCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                sum:
                  type: integer
              required:
                - userId
                - sum
            example:
              userId: 1
              sum: 100500
      responses:
        '201':
          description: Заказ создан успешно
        '400':
          description: Заказ не создан
  /notification/newOrderSuccess:
    post:
      tags:
        - "Notification Service"
      summary: Уведомление об успешном создании нового заказа
      operationId: notificationNewOrderSuccess
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                sum:
                  type: integer
              required:
                - userId
                - sum
      responses:
        '201':
          description: Уведомление отправлено
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
      required:
        - email
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        sum:
          type: integer
          format: int64
      required:
        - userId
        - sum
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Пример пользователя
              value:
                firstName: Ivan
                lastName: Ivanov
                email: ivanov@mail.ru
      required: true
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
          examples:
            sample-user:
              summary: Пример заказа
              value:
                userId: 1
                sum: 100500
      required: true